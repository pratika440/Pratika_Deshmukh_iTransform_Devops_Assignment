Write a script that assigns a variable that contains a list of all shell scripts (*.sh) in the current directory (command redirection). Using the 'for'statement from the course, iterate through that list of files and display the filename of each and cat out the contents to the terminal.

Ans:

#!/usr/bin/bash


LIST=$(ls *.sh)
   
for i in $LIST
do      	
    itr=$( cat $i )
    echo "THE CONTENT OF $i are:"
    echo $itr
done


Output:

$ ./hiiScript.sh
THE CONTENT OF helloScript.sh are:

THE CONTENT OF hiiScript.sh are:
#! /bin/bash #echo "First:$1" #echo "Last:$2" #echo "Age:$3" #num=$(($3+10)) #echo "Hello $1 $2 $num" #car=('BMW' 'Tesla' 'Honda') #echo "Select any number" #read number #car=$1 #colour=('1=White' '2=Green' '3=Red') #echo "${colour[@]}" #echo "Choose any colour" #read colour #case $colour in #[1]) #echo "White colour represents peace" #;; #[2]) #echo "Green colour represnts nature" #;; #[3]) # echo "Red colour represents danger" # ;; #*) #echo "Unknown colour" #;; #esac #assignment="$USER,$HOME,$HISTCONTROL,$TERM" #echo $assignment #i=1 #while [ $i -le $1 ] #do #echo "$i I am Pratika" #i=$(($i+1) #done #echo "Enter filename" #read filename #if [[ -f "$filename" ]] #then #while IFS= read -r line #do #echo "$line" #done < $filename #else #echo "$filename doesn't exist" #fi #function funcCheck() # { # returningValue="Generated inside the function" #} #returningValue="Generated outside the function" #echo $returningValue #funcCheck #echo $returningValue #!/usr/bin/bash LIST=$(ls *.sh) for i in $LIST do itr=$( cat $i ) echo "THE CONTENT OF $i are:" echo $itr done
THE CONTENT OF secondScript.sh are:
 done < "${1 : - dev/null}"
THE CONTENT OF superHeroes.sh are